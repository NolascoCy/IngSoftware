/**
 * This class is generated by jOOQ
 */
package database.tables;


import database.Public;
import database.tables.records.DetalleventaRecord;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Detalleventa extends TableImpl<DetalleventaRecord> {

    private static final long serialVersionUID = -862441900;

    /**
     * The reference instance of <code>public.detalleventa</code>
     */
    public static final Detalleventa DETALLEVENTA = new Detalleventa();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DetalleventaRecord> getRecordType() {
        return DetalleventaRecord.class;
    }

    /**
     * The column <code>public.detalleventa.idventa</code>.
     */
    public final TableField<DetalleventaRecord, Integer> IDVENTA = createField("idventa", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.detalleventa.cantidad</code>.
     */
    public final TableField<DetalleventaRecord, Double> CANTIDAD = createField("cantidad", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.detalleventa.idproducto</code>.
     */
    public final TableField<DetalleventaRecord, Integer> IDPRODUCTO = createField("idproducto", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.detalleventa.precio</code>.
     */
    public final TableField<DetalleventaRecord, BigDecimal> PRECIO = createField("precio", org.jooq.impl.SQLDataType.NUMERIC.precision(6, 2), this, "");

    /**
     * Create a <code>public.detalleventa</code> table reference
     */
    public Detalleventa() {
        this("detalleventa", null);
    }

    /**
     * Create an aliased <code>public.detalleventa</code> table reference
     */
    public Detalleventa(String alias) {
        this(alias, DETALLEVENTA);
    }

    private Detalleventa(String alias, Table<DetalleventaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Detalleventa(String alias, Table<DetalleventaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Detalleventa as(String alias) {
        return new Detalleventa(alias, this);
    }

    /**
     * Rename this table
     */
    public Detalleventa rename(String name) {
        return new Detalleventa(name, null);
    }
}
