/**
 * This class is generated by jOOQ
 */
package database.tables.records;


import database.tables.Costo;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CostoRecord extends UpdatableRecordImpl<CostoRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = -1556622974;

    /**
     * Setter for <code>public.costo.idcosto</code>.
     */
    public void setIdcosto(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.costo.idcosto</code>.
     */
    public Integer getIdcosto() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.costo.rubro</code>.
     */
    public void setRubro(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.costo.rubro</code>.
     */
    public String getRubro() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.costo.valor_costo</code>.
     */
    public void setValorCosto(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.costo.valor_costo</code>.
     */
    public Integer getValorCosto() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Costo.COSTO.IDCOSTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Costo.COSTO.RUBRO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Costo.COSTO.VALOR_COSTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdcosto();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRubro();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getValorCosto();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostoRecord value1(Integer value) {
        setIdcosto(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostoRecord value2(String value) {
        setRubro(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostoRecord value3(Integer value) {
        setValorCosto(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostoRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CostoRecord
     */
    public CostoRecord() {
        super(Costo.COSTO);
    }

    /**
     * Create a detached, initialised CostoRecord
     */
    public CostoRecord(Integer idcosto, String rubro, Integer valorCosto) {
        super(Costo.COSTO);

        set(0, idcosto);
        set(1, rubro);
        set(2, valorCosto);
    }
}
